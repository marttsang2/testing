{"version":3,"sources":["logo.svg","HelloWorld.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Component","TodoList","props","handleChange","e","setState","inputValue","target","value","handleAddItem","newItems","state","items","handleKeyDown","key","handleRemoveItem","id","filter","item","i","type","this","placeholder","onChange","onKeyDown","onClick","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,I,2CCEyBA,Y,MCEnBC,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAQVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CAACC,WAAaF,EAAEG,OAAOC,SAVtB,EAanBC,cAAgB,WACZ,IAAMC,EAAQ,CAAI,EAAKC,MAAML,YAAf,mBAA8B,EAAKK,MAAMC,QAEvD,EAAKP,SAAS,CACVO,MAAOF,EACPJ,WAAY,MAlBD,EAsBnBO,cAAgB,SAACT,GACb,GAAa,UAAVA,EAAEU,IAAiB,CAClB,IAAMJ,EAAQ,CAAI,EAAKC,MAAML,YAAf,mBAA8B,EAAKK,MAAMC,QAEvD,EAAKP,SAAS,CACVO,MAAOF,EACPJ,WAAY,OA5BL,EAiCnBS,iBAAmB,SAACC,GAChB,IAAMN,EAAW,EAAKC,MAAMC,MAAMK,QAAO,SAACC,EAAKC,GAAN,OAAWA,IAAMH,KAE1D,EAAKX,SAAS,CACVO,MAAOF,KAlCX,EAAKC,MAAQ,CACTC,MAAO,GACPN,WAAY,IALD,E,qDAyCT,IAAD,OACL,OACI,gCACI,uBACIc,KAAK,OACLZ,MAAOa,KAAKV,MAAML,WAClBgB,YAAa,iCACbC,SAAUF,KAAKlB,aACfqB,UAAWH,KAAKR,gBAEnB,wBAAQY,QAASJ,KAAKZ,cAAtB,sCACD,6BAEIY,KAAKV,MAAMC,MAAMc,KAAI,SAAClB,EAAOQ,GAC7B,OAAO,oBAAiBS,QAAS,kBAAM,EAAKV,iBAAiBC,IAAtD,SACFR,GADWA,e,GAxDER,aCOvB2B,MANf,WACE,OACE,cAAC,EAAD,KCKWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.af8afcea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {Component} from 'react'\r\n\r\nexport default class HelloWorld extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            text: '',\r\n            window : this,\r\n        };\r\n    }\r\n\r\n    handleChange = (textChange) => {\r\n        if (textChange.target instanceof HTMLInputElement) {\r\n            this.setState({text : textChange.target.value})\r\n        }\r\n        console.log(this.state.window)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input type=\"text\" \r\n                value={this.state.text} \r\n                placeholder=\"input your text\"\r\n                onChange={this.handleChange}\r\n                />\r\n                <h1>{this.state.text}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Button from './Button'\r\nimport ListItem from './ListItem'\r\n\r\nexport default class TodoList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            items: [],\r\n            inputValue: '',\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({inputValue : e.target.value})\r\n    }\r\n\r\n    handleAddItem = () => {\r\n        const newItems = [this.state.inputValue, ...this.state.items]\r\n    \r\n        this.setState({\r\n            items: newItems,\r\n            inputValue: '',\r\n        })\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        if(e.key === 'Enter') {\r\n            const newItems = [this.state.inputValue, ...this.state.items]\r\n        \r\n            this.setState({\r\n                items: newItems,\r\n                inputValue: '',\r\n            })\r\n        }\r\n    }\r\n\r\n    handleRemoveItem = (id) => {\r\n        const newItems = this.state.items.filter((item,i)=> i !== id)\r\n\r\n        this.setState({\r\n            items: newItems,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.state.inputValue}\r\n                    placeholder={\"請輸入文字\"}\r\n                    onChange={this.handleChange}\r\n                    onKeyDown={this.handleKeyDown}\r\n                    />\r\n                 <button onClick={this.handleAddItem}>新增項目</button>\r\n                <ul>\r\n                {\r\n                    this.state.items.map((value, id) => {\r\n                    return <li key={value}  onClick={() => this.handleRemoveItem(id)} >\r\n                        {value}\r\n                    </li>\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport HelloWorld from './HelloWorld';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <TodoList/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}